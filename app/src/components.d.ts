/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface AppRoot {

    }
  }

  interface HTMLAppRootElement extends StencilComponents.AppRoot, HTMLStencilElement {}

  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };
  interface HTMLElementTagNameMap {
    'app-root': HTMLAppRootElement;
  }
  interface ElementTagNameMap {
    'app-root': HTMLAppRootElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-root': JSXElements.AppRootAttributes;
    }
  }
  namespace JSXElements {
    export interface AppRootAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface MinnerRock {
      'img': string;
      'maxStrikes': number;
    }
  }

  interface HTMLMinnerRockElement extends StencilComponents.MinnerRock, HTMLStencilElement {}

  var HTMLMinnerRockElement: {
    prototype: HTMLMinnerRockElement;
    new (): HTMLMinnerRockElement;
  };
  interface HTMLElementTagNameMap {
    'minner-rock': HTMLMinnerRockElement;
  }
  interface ElementTagNameMap {
    'minner-rock': HTMLMinnerRockElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'minner-rock': JSXElements.MinnerRockAttributes;
    }
  }
  namespace JSXElements {
    export interface MinnerRockAttributes extends HTMLAttributes {
      'img'?: string;
      'maxStrikes'?: number;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface RockShard {
      'img': string;
      'initLeft': number;
      'initTop': number;
    }
  }

  interface HTMLRockShardElement extends StencilComponents.RockShard, HTMLStencilElement {}

  var HTMLRockShardElement: {
    prototype: HTMLRockShardElement;
    new (): HTMLRockShardElement;
  };
  interface HTMLElementTagNameMap {
    'rock-shard': HTMLRockShardElement;
  }
  interface ElementTagNameMap {
    'rock-shard': HTMLRockShardElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'rock-shard': JSXElements.RockShardAttributes;
    }
  }
  namespace JSXElements {
    export interface RockShardAttributes extends HTMLAttributes {
      'img'?: string;
      'initLeft'?: number;
      'initTop'?: number;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
